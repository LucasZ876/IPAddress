// Code generated by running convert.go from the go workspace directory (the one containing the src folder). Do not edit.

package ipaddr

var keyStrMap = map[string]int{
	`ipaddress.host.error.bracketed.conflicting.mask`:          105,
	`ipaddress.error.invalid.zone`:                             2,
	`ipaddress.host.error.invalid`:                             24,
	`ipaddress.error.invalidCIDRPrefixOrMask`:                  55,
	`ipaddress.host.error.port`:                                61,
	`ipaddress.error.empty`:                                    92,
	`ipaddress.host.error.invalidPort.no.digits`:               6,
	`ipaddress.error.lower.below.range`:                        56,
	`ipaddress.host.error.too.many.segments`:                   102,
	`ipaddress.error.single.segment`:                           112,
	`ipaddress.error.inconsistent.prefixes`:                    113,
	`ipaddress.error.mixedVersions`:                            7,
	`ipaddress.error.invalidMixedRange`:                        27,
	`ipaddress.error.too.many.segments`:                        33,
	`ipaddress.error.incompatible.position`:                    23,
	`ipaddress.error.prefixSize`:                               71,
	`ipaddress.error.invalid.character.combination.at.index`:   77,
	`ipaddress.error.ipv6.has.zone`:                            81,
	`ipaddress.error.invalid.joined.ranges`:                    93,
	`ipaddress.error.invalid.position`:                         28,
	`ipaddress.error.ipv4.segment.too.large`:                   35,
	`ipaddress.host.error.service`:                             106,
	`ipaddress.error.special.ip`:                               128,
	`ipaddress.error.separatePrefixFromMask`:                   135,
	`ipaddress.error.segment.too.short.at.index`:               25,
	`ipaddress.error.no.mixed`:                                 36,
	`ipaddress.error.ipv6.invalid.segment.count`:               63,
	`ipaddress.error.ipv6.format`:                              97,
	`ipaddress.host.error.url`:                                 137,
	`ipaddress.error.segment.too.long.at.index`:                107,
	`ipaddress.error.ip.format`:                                130,
	`ipaddress.error.CIDRNotAllowed`:                           18,
	`ipaddress.error.ipv4.invalid.segment.count`:               22,
	`ipaddress.error.maskMismatch`:                             38,
	`ipaddress.error.ipv4.invalid.octal.digit`:                 62,
	`ipaddress.host.error.bracketed.missing.end`:               91,
	`ipaddress.error.empty.segment.at.index`:                   47,
	`ipaddress.error.address.out.of.range`:                     87,
	`ipaddress.error.ipv4.invalid.binary.digit`:                121,
	`ipaddress.error.ipVersionMismatch`:                        123,
	`ipaddress.host.error.invalid.service.hyphen.start`:        111,
	`ipaddress.error.mask.single.segment`:                      136,
	`ipaddress.error.segment.too.long`:                         44,
	`ipaddress.error.ipv4.segment.hex`:                         45,
	`ipaddress.error.single.wildcard.order`:                    54,
	`ipaddress.error.only.ipv6.has.zone`:                       85,
	`ipaddress.error.invalid.character.at.index`:               101,
	`ipaddress.error.address.lower.exceeds.upper`:              65,
	`ipaddress.error.mac.invalid.byte.count`:                   83,
	`ipaddress.error.unavailable.numeric`:                      104,
	`ipaddress.error.sizeMismatch`:                             118,
	`ipaddress.error.address.is.ipv6`:                          124,
	`ipaddress.error.zoneAndCIDRPrefix`:                        17,
	`ipaddress.error.invalidMultipleMask`:                      48,
	`ipaddress.error.invalid.mask.empty`:                       73,
	`ipaddress.host.error.cidrprefixonly`:                      76,
	`ipaddress.error.ipv6.prefix.leading.zeros`:                80,
	`ipaddress.error.ipv6.separator`:                           116,
	`ipaddress.error.no.single.wildcard`:                       0,
	`ipaddress.error.segmentMismatch`:                          39,
	`ipaddress.host.error.invalid.service.hyphen.consecutive`:  64,
	`ipaddress.error.no.wildcard`:                              72,
	`ipaddress.error.address.is.ipv4`:                          78,
	`ipaddress.error.ipv4.prefix.leading.zeros`:                26,
	`ipaddress.error.ipMismatch`:                               32,
	`ipaddress.error.prefix.only`:                              13,
	`ipaddress.error.too.few.segments.digit.count`:             66,
	`ipaddress.address.error`:                                  120,
	`ipaddress.error.ipv4`:                                     40,
	`ipaddress.error.nullNetwork`:                              42,
	`ipaddress.error.no.range`:                                 95,
	`ipaddress.host.error.invalidService.no.chars`:             131,
	`ipaddress.host.error.invalidPort.too.large`:               70,
	`ipaddress.error.ipv4.too.many.segments`:                   15,
	`ipaddress.host.error`:                                     19,
	`ipaddress.host.error.bracketed.conflicting.prefix.length`: 59,
	`ipaddress.host.error.empty.host.resolve`:                  60,
	`ipaddress.error.null.segment`:                             68,
	`ipaddress.host.error.invalid.type`:                        11,
	`ipaddress.host.error.ipaddress`:                           52,
	`ipaddress.error.ipv6.cannot.start.with.single.separator`:  84,
	`ipaddress.mac.error.not.eui.convertible`:                  99,
	`ipaddress.mac.error.format`:                               127,
	`ipaddress.error.empty.start.of.range`:                     94,
	`ipaddress.error.exceeds.size`:                             8,
	`ipaddress.error.zero.not.allowed`:                         21,
	`ipaddress.error.url`:                                      43,
	`ipaddress.error.invalid.character`:                        53,
	`ipaddress.error.ipv6.segment.format`:                      122,
	`ipaddress.host.error.host.brackets`:                       4,
	`ipaddress.error.mismatched.bit.size`:                      10,
	`ipaddress.error.all`:                                      82,
	`ipaddress.error.only.ipv6.square.brackets`:                30,
	`ipaddress.host.error.invalid.length`:                      79,
	`ipaddress.error.ipv4.too.few.segments`:                    90,
	`ipaddress.mac.error.mix.format.characters.at.index`:       103,
	`ipaddress.error.segment.leading.zeros`:                    108,
	`ipaddress.error.ipv4.invalid.byte.count`:                  109,
	`ipaddress.host.error.invalid.service.hyphen.end`:          132,
	`ipaddress.error.no.iterator.element.to.remove`:            31,
	`ipaddress.error.invalid.mask.address.empty`:               41,
	`ipaddress.error.reverseRange`:                             89,
	`ipaddress.error.ipv4.invalid.decimal.digit`:               96,
	`ipaddress.error.lower.above.range`:                        119,
	`ipaddress.host.error.invalid.character.at.index`:          126,
	`ipaddress.error.splitMismatch`:                            133,
	`ipaddress.host.error.host.resolve`:                        3,
	`ipaddress.host.error.invalid.port.service`:                37,
	`ipaddress.error.only.zone`:                                86,
	`ipaddress.host.error.invalid.mechanism`:                   114,
	`ipaddress.error.invalid.mask.wildcard`:                    117,
	`ipaddress.error.wildcardOrRangeIPv6`:                      51,
	`ipaddress.error.zone`:                                     74,
	`ipaddress.error.mixedNetworks`:                            129,
	`ipaddress.error.version.mismatch`:                         134,
	`ipaddress.error.address.not.block`:                        125,
	`ipaddress.error.invalidRange`:                             5,
	`ipaddress.error.separatePrefixFromAddress`:                58,
	`ipaddress.error.ipv6.ambiguous`:                           67,
	`ipaddress.error.invalidCIDRPrefix`:                        69,
	`ipaddress.error.invalid.zone.encoding`:                    75,
	`ipaddress.host.error.empty`:                               12,
	`ipaddress.error.cannot.end.with.single.separator`:         16,
	`ipaddress.error.ipv6`:                                     34,
	`ipaddress.error.address.too.large`:                        14,
	`ipaddress.error.invalid.mask.extra.chars`:                 50,
	`ipaddress.host.error.invalidService.no.letter`:            98,
	`ipaddress.error.invalid.character.combination`:            115,
	`ipaddress.error.back.digit.count`:                         138,
	`ipaddress.host.error.segment.too.short`:                   29,
	`ipaddress.error.ipv6.invalid.byte.count`:                  110,
	`ipaddress.host.error.invalidService.too.long`:             1,
	`ipaddress.host.error.all.numeric`:                         20,
	`ipaddress.error.front.digit.count`:                        57,
	`ipaddress.host.error.bracketed.not.ipv6`:                  88,
	`ipaddress.error.too.few.segments`:                         100,
	`ipaddress.error.index.exceeds.prefix.length`:              9,
	`ipaddress.error.mac.invalid.segment.count`:                46,
	`ipaddress.error.ipv4.format`:                              49,
}

var strIndices = []int{
	0, 65, 86, 130, 153, 222, 276, 295, 353, 373,
	400, 427, 450, 502, 538, 555, 589, 696, 720, 768,
	779, 805, 835, 873, 906, 918, 944, 984, 1046, 1072,
	1091, 1135, 1164, 1215, 1244, 1280, 1302, 1343, 1391, 1460,
	1535, 1571, 1594, 1609, 1649, 1665, 1704, 1741, 1771, 1808,
	1856, 1894, 1951, 1992, 2020, 2081, 2276, 2288, 2337, 2394,
	2460, 2489, 2528, 2547, 2585, 2629, 2678, 2732, 2768, 2815,
	2983, 3004, 3079, 3127, 3140, 3161, 3195, 3250, 3312, 3327,
	3346, 3386, 3406, 3442, 3476, 3588, 3623, 3662, 3699, 3729,
	3794, 3856, 3893, 3920, 3985, 4004, 4050, 4071, 4143, 4185,
	4226, 4254, 4278, 4295, 4348, 4391, 4448, 4495, 4520, 4550,
	4585, 4620, 4659, 4734, 4784, 4815, 4859, 4893, 4909, 4942,
	4954, 4971, 4991, 5006, 5031, 5046, 5110, 5136, 5182, 5257,
	5299, 5435, 5456, 5491, 5623, 5668, 5705, 5763, 5799,
}

var strVals = `validation options do no allow single character wildcard segments` +
	`service name too long` +
	`invalid zone or scope id character at index:` +
	`host cannot be resolved` +
	`ipv6 addresses must be surrounded by square brackets [] in host names` +
	`in segment range, lower value must precede upper value` +
	`port value is empty` +
	`Please specify either IPv4 or IPv6 addresses, but not both` +
	`exceeds address size` +
	`index exceeds prefix length` +
	`mismatched address bit size` +
	`invalid IP address type` +
	`validation options do no allow empty string for host` +
	`a prefix-only address is not allowed` +
	`address too large` +
	`IPv4 address has too many segments` +
	`An IPv6 address cannot end with a single colon, it must end with either two colons or with the last segment` +
	`zone and prefix combined` +
	`CIDR prefix or mask not allowed for this address` +
	`Host error:` +
	`host cannot be all numeric` +
	`a non-zero address is required` +
	`IPv4 address has invalid segment count` +
	`Incompatible positions in address` +
	`invalid host` +
	`segment too short at index` +
	`IPv4 CIDR prefix length starts with zero` +
	`IPv4 segment ranges cannot be converted to IPv6 segment ranges` +
	`Invalid index into address` +
	`zero-length segment` +
	`only ipv6 can be enclosed in square brackets` +
	`no iterator element to remove` +
	`IP version of address must match IP version of mask` +
	`address has too many segments` +
	`validation options do not allow IPv6` +
	`IPv4 segment too large` +
	`validation options do no allow mixed IPv6` +
	`invalid port or service name character at index:` +
	`applying the mask results in a segment that is not a sequential range` +
	`joining segments results in a joined segment that is not a sequential range` +
	`validation options do not allow IPv4` +
	`mask with empty address` +
	`network is null` +
	`please supply an address, not a full URL` +
	`segment too long` +
	`IPv4 segment contains hexadecimal value` +
	`MACSize address has invalid segment count` +
	`segment value missing at index` +
	`mask must specify a single IP address` +
	`invalid format of IPv4 (255.255.255.255) address` +
	`invalid chars following mask at index:` +
	`Wildcards and ranges are not supported for IPv6 addresses` +
	`validation options do no allow IP address` +
	`invalid character in segment` +
	`single wildcards can appear only as the end of segment values` +
	`A mask must be a single IP address, while a CIDR prefix length must indicate the count of subnet bits, between 0 and 32 for IP version 4 addresses and between 0 and 128 for IP version 6 addresses` +
	`below range:` +
	`front address in range has an invalid digit count` +
	`specify the IP address separately from the mask or prefix` +
	`conflicting prefix lengths inside and outside of bracketed address` +
	`empty host cannot be resolved` +
	`validation options do no allow for port` +
	`invalid octal digit` +
	`IPv6 address has invalid segment count` +
	`service name cannot have consecutive hyphens` +
	`invalid address range, lower bound exceeds upper:` +
	`address has too few segments or an invalid digit count` +
	`IPv6 compressed address is ambiguous` +
	`Section or grouping array contains a null value` +
	`CIDR prefix must indicate the count of subnet bits, between 0 and 32 subnet bits for IP version 4 addresses and between 0 and 128 subnet bits for IP version 6 addresses` +
	`port number too large` +
	`the network prefix bit-length is negative or exceeds the address bit-length` +
	`validation options do no allow wildcard segments` +
	`mask is empty` +
	`IPv6 zone not allowed` +
	`invalid encoding in zone at index:` +
	`please supply an address, not a CIDR prefix length only` +
	`invalid combination with earlier character at character number` +
	`address is IPv4` +
	`invalid host length` +
	`IPv6 CIDR prefix length starts with zero` +
	`no ipv6 zone allowed` +
	`the universal address is not allowed` +
	`MACSize address has invalid byte count` +
	`An IPv6 address cannot start with a single colon, it must start with either two colons or with the first segment` +
	`only ipv6 can have a zone specified` +
	`with a zone you must specify an address` +
	`Address not within the assigned range` +
	`bracketed address must be IPv6` +
	`reversing a range of values does not result in a sequential range` +
	`options do not allow IPv4 address with less than four segments` +
	`bracketed address missing end bracket` +
	`you must specify an address` +
	`range of joined segments cannot be divided into individual ranges` +
	`range start missing` +
	`validation options do not allow range segments` +
	`invalid decimal digit` +
	`invalid format of IPv6 (ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff) address` +
	`service name must have at least one letter` +
	`MACSize address cannot be converted to EUI 64` +
	`address has too few segments` +
	`invalid character number` +
	`too many segments` +
	`invalid mix of mac address format characters at index` +
	`No numeric value available for this address` +
	`conflicting masks inside and outside of bracketed address` +
	`validation options do no allow for service name` +
	`segment too long at index` +
	`segment value starts with zero` +
	`IPv4 address has invalid byte count` +
	`IPv6 address has invalid byte count` +
	`service name cannot start with a hyphen` +
	`validation options do not allow you to specify a non-segmented single value` +
	`Segments invalid due to inconsistent prefix values` +
	`address mechanism not supported` +
	`invalid combination of characters in segment` +
	`invalid position of IPv6 separator` +
	`wildcard in mask` +
	`the number of segments must match` +
	`above range:` +
	`IP Address error:` +
	`invalid binary digit` +
	`invalid segment` +
	`the IP version must match` +
	`address is IPv6` +
	`Address is neither a CIDR prefix block nor an individual address` +
	`invalid character at index` +
	`validation options do no allow this mac format` +
	`a special IP address with first segment larger than 255 cannot be used here` +
	`Address components have different networks` +
	`invalid format of IP address, whether IPv4 (255.255.255.255) or IPv6 (ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff) or other supported format` +
	`service name is empty` +
	`service name cannot end in a hyphen` +
	`splitting digits in range segments results in an invalid string (eg 12-22 becomes 1-2.2-2 which is 12 and 22 and nothing in between)` +
	`Unable to convert version of argument address` +
	`specify a mask or prefix but not both` +
	`mask with single segment not allowed by validation options` +
	`please supply a host, not a full URL` +
	`back address in range has an invalid digit count`

func lookupStr(key string) (result string) {
	if index, ok := keyStrMap[key]; ok {
		start, end := strIndices[index], strIndices[index+1]
		result = strVals[start:end]
	}
	return
}
